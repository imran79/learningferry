"use strict";var cov_2bns0imrkm=function(){var path="/home/imran/Sourcecode samples/learningferry/learningferry.server/dist/config/middleware/BaseMiddleware/BaseMiddleware.js",hash="283c25b93ab71bda11a781c4c70a4d7c160bd5ee",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/imran/Sourcecode samples/learningferry/learningferry.server/dist/config/middleware/BaseMiddleware/BaseMiddleware.js",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:19},end:{line:3,column:41}},"2":{start:{line:4,column:24},end:{line:4,column:51}},"3":{start:{line:6,column:16},end:{line:6,column:34}},"4":{start:{line:7,column:20},end:{line:7,column:53}},"5":{start:{line:8,column:15},end:{line:8,column:32}},"6":{start:{line:9,column:25},end:{line:9,column:83}},"7":{start:{line:10,column:25},end:{line:10,column:53}},"8":{start:{line:13,column:8},end:{line:13,column:37}},"9":{start:{line:14,column:18},end:{line:14,column:27}},"10":{start:{line:15,column:8},end:{line:15,column:59}},"11":{start:{line:16,column:8},end:{line:16,column:35}},"12":{start:{line:17,column:8},end:{line:23,column:12}},"13":{start:{line:20,column:20},end:{line:20,column:48}},"14":{start:{line:24,column:8},end:{line:24,column:34}},"15":{start:{line:25,column:8},end:{line:25,column:31}},"16":{start:{line:26,column:8},end:{line:26,column:55}},"17":{start:{line:27,column:8},end:{line:27,column:158}},"18":{start:{line:27,column:35},end:{line:27,column:156}},"19":{start:{line:28,column:8},end:{line:28,column:44}},"20":{start:{line:30,column:8},end:{line:33,column:11}},"21":{start:{line:31,column:12},end:{line:31,column:68}},"22":{start:{line:32,column:12},end:{line:32,column:19}},"23":{start:{line:34,column:8},end:{line:39,column:11}},"24":{start:{line:35,column:12},end:{line:37,column:13}},"25":{start:{line:36,column:16},end:{line:36,column:87}},"26":{start:{line:38,column:12},end:{line:38,column:24}},"27":{start:{line:40,column:8},end:{line:40,column:55}},"28":{start:{line:41,column:8},end:{line:41,column:19}},"29":{start:{line:44,column:0},end:{line:44,column:33}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:4},end:{line:12,column:5}},loc:{start:{line:12,column:31},end:{line:42,column:5}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:19,column:25},end:{line:19,column:26}},loc:{start:{line:19,column:42},end:{line:21,column:17}},line:19},"2":{name:"(anonymous_2)",decl:{start:{line:27,column:21},end:{line:27,column:22}},loc:{start:{line:27,column:35},end:{line:27,column:156}},line:27},"3":{name:"(anonymous_3)",decl:{start:{line:30,column:16},end:{line:30,column:17}},loc:{start:{line:30,column:36},end:{line:33,column:9}},line:30},"4":{name:"(anonymous_4)",decl:{start:{line:34,column:16},end:{line:34,column:17}},loc:{start:{line:34,column:43},end:{line:39,column:9}},line:34}},branchMap:{"0":{loc:{start:{line:35,column:12},end:{line:37,column:13}},type:"if",locations:[{start:{line:35,column:12},end:{line:37,column:13}},{start:{line:35,column:12},end:{line:37,column:13}}],line:35}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_2bns0imrkm.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const BodyParser=(cov_2bns0imrkm.s[1]++,require("body-parser"));const MethodOveride_1=(cov_2bns0imrkm.s[2]++,require("../MethodOveride"));//const dotenv = require('dotenv').config();
const express=(cov_2bns0imrkm.s[3]++,require("express"));const BaseRoute_1=(cov_2bns0imrkm.s[4]++,require("../../routes/BaseRoute"));const morgan=(cov_2bns0imrkm.s[5]++,require("morgan"));const AuthController_1=(cov_2bns0imrkm.s[6]++,require("../../../authenticate/controller/AuthController"));const expressValidator=(cov_2bns0imrkm.s[7]++,require("express-validator"));class BaseMidlleware{static get configuration(){cov_2bns0imrkm.f[0]++;cov_2bns0imrkm.s[8]++;console.log('BaseMidleware');var app=(cov_2bns0imrkm.s[9]++,express());cov_2bns0imrkm.s[10]++;app.use(BodyParser.urlencoded({extended:true}));cov_2bns0imrkm.s[11]++;app.use(BodyParser.json());cov_2bns0imrkm.s[12]++;app.use(expressValidator({customValidators:{isArray:function(value){cov_2bns0imrkm.f[1]++;cov_2bns0imrkm.s[13]++;return Array.isArray(value);}}}));cov_2bns0imrkm.s[14]++;app.enable("trust proxy");cov_2bns0imrkm.s[15]++;app.use(morgan('dev'));cov_2bns0imrkm.s[16]++;app.use(AuthController_1.default.initialize());cov_2bns0imrkm.s[17]++;app.get("/",(req,res)=>{cov_2bns0imrkm.f[2]++;cov_2bns0imrkm.s[18]++;return res.status(200).json({message:"Welcome to the TODO API. Check the documentation for the list of available endpoints"});});cov_2bns0imrkm.s[19]++;app.use(BaseRoute_1.default.routes);// If no route is matched by now, it must be a 404
cov_2bns0imrkm.s[20]++;app.use((req,res,next)=>{cov_2bns0imrkm.f[3]++;cov_2bns0imrkm.s[21]++;res.status(404).json({"error":"Endpoint not found"});cov_2bns0imrkm.s[22]++;next();});cov_2bns0imrkm.s[23]++;app.use((error,req,res,next)=>{cov_2bns0imrkm.f[4]++;cov_2bns0imrkm.s[24]++;if(process.env.NODE_ENV==="production"){cov_2bns0imrkm.b[0][0]++;cov_2bns0imrkm.s[25]++;return res.status(500).json({"error":"Unexpected error: "+error});}else{cov_2bns0imrkm.b[0][1]++;}cov_2bns0imrkm.s[26]++;next(error);});cov_2bns0imrkm.s[27]++;app.use(MethodOveride_1.default.configuration);cov_2bns0imrkm.s[28]++;return app;}}cov_2bns0imrkm.s[29]++;exports.default=BaseMidlleware;//# sourceMappingURL=BaseMiddleware.js.map